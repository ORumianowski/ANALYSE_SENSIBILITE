sensibility = NaN,
elasticity = NaN,
sortie = NaN)
for (sortie_ in 1:4){
res_s = c()
res_e = c()
for (i_ in 1:15){
resultParam_i_ = resultParam_i(i=i_,sortieNormalise,matriceOAT)
res_i = sensivity_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_s = c(res_s, res_i)
res_i = elascitiy_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_e = c(res_e, res_i)
}
dd = tibble(
parametre = par_name,
sensibility = res_s,
elasticity = res_e,
sortie = rep(paste0("S", sortie_), length(res_s)))
ff = rbind(ff, dd)
}
res  = ff[2:nrow(ff),]
ggplot()+
geom_text(data = res %>% subset(., sortie=="S1"), aes(x = sensibility, y=elasticity, label=parametre))
ggplot()+
geom_text(data = res %>% subset(., sortie=="S2"), aes(x = sensibility, y=elasticity, label=parametre))
ggplot()+
geom_text(data = res %>% subset(., sortie=="S3"), aes(x = sensibility, y=elasticity, label=parametre))
ggplot()+
geom_text(data = res %>% subset(., sortie=="S4"), aes(x = sensibility, y=elasticity, label=parametre))
oat_index= tibble(parametre = NaN,
sensibility = NaN,
elasticity = NaN,
sortie = NaN)
for (sortie_ in 1:4){
res_s = c()
res_e = c()
for (i_ in 1:15){
resultParam_i_ = resultParam_i(i=i_,sortieNormalise,matriceOAT)
res_i = sensivity_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_s = c(res_s, res_i)
res_i = elascitiy_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_e = c(res_e, res_i)
}
tibble_sortie_i = tibble(
parametre = par_name,
sensibility = res_s,
elasticity = res_e,
sortie = rep(paste0("S", sortie_), length(res_s)))
oat_index = rbind(oat_index)
}
res  = oat_index[2:nrow(oat_index),]
ggplot()+
geom_text(data = res %>% subset(., sortie=="S1"), aes(x = sensibility, y=elasticity, label=parametre))
ggplot()+
geom_text(data = res %>% subset(., sortie=="S2"), aes(x = sensibility, y=elasticity, label=parametre))
ggplot()+
geom_text(data = res %>% subset(., sortie=="S3"), aes(x = sensibility, y=elasticity, label=parametre))
ggplot()+
geom_text(data = res %>% subset(., sortie=="S4"), aes(x = sensibility, y=elasticity, label=parametre))
oat_index= tibble(parametre = NaN,
sensibility = NaN,
elasticity = NaN,
sortie = NaN)
for (sortie_ in 1:4){
res_s = c()
res_e = c()
for (i_ in 1:15){
resultParam_i_ = resultParam_i(i=i_,sortieNormalise,matriceOAT)
res_i = sensivity_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_s = c(res_s, res_i)
res_i = elascitiy_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_e = c(res_e, res_i)
}
tibble_sortie_i = tibble(
parametre = par_name,
sensibility = res_s,
elasticity = res_e,
sortie = rep(paste0("S", sortie_), length(res_s)))
oat_index = rbind(oat_index)
}
res  = oat_index[2:nrow(oat_index),]
s1 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S1"), aes(x = sensibility, y=elasticity, label=parametre))
s2 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S2"), aes(x = sensibility, y=elasticity, label=parametre))
s3 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S3"), aes(x = sensibility, y=elasticity, label=parametre))
s4 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S4"), aes(x = sensibility, y=elasticity, label=parametre))
s2
sortieNormalise
matriceOAT
oat_index
oat_index= tibble(parametre = NaN,
sensibility = NaN,
elasticity = NaN,
sortie = NaN)
for (sortie_ in 1:4){
res_s = c()
res_e = c()
for (i_ in 1:15){
resultParam_i_ = resultParam_i(i=i_,sortieNormalise,matriceOAT)
res_i = sensivity_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_s = c(res_s, res_i)
res_i = elascitiy_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_e = c(res_e, res_i)
}
tibble_sortie_i = tibble(
parametre = par_name,
sensibility = res_s,
elasticity = res_e,
sortie = rep(paste0("S", sortie_), length(res_s)))
oat_index = rbind(oat_index)
}
res  = oat_index[2:nrow(oat_index),]
ggplot()+
geom_text(data = res %>% subset(., sortie=="S1"), aes(x = sensibility, y=elasticity, label=parametre))
ggplot()+
geom_text(data = res %>% subset(., sortie=="S2"), aes(x = sensibility, y=elasticity, label=parametre))
ggplot()+
geom_text(data = res %>% subset(., sortie=="S3"), aes(x = sensibility, y=elasticity, label=parametre))
ggplot()+
geom_text(data = res %>% subset(., sortie=="S4"), aes(x = sensibility, y=elasticity, label=parametre))
oat_index
oat_index= tibble(parametre = NaN,
sensibility = NaN,
elasticity = NaN,
sortie = NaN)
for (sortie_ in 1:4){
res_s = c()
res_e = c()
for (i_ in 1:15){
resultParam_i_ = resultParam_i(i=i_,sortieNormalise,matriceOAT)
res_i = sensivity_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_s = c(res_s, res_i)
res_i = elascitiy_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_e = c(res_e, res_i)
}
tibble_sortie_i = tibble(
parametre = par_name,
sensibility = res_s,
elasticity = res_e,
sortie = rep(paste0("S", sortie_), length(res_s)))
oat_index = rbind(oat_index, tibble_sortie_i)
}
res  = oat_index[2:nrow(oat_index),]
ggplot()+
geom_text(data = res %>% subset(., sortie=="S1"), aes(x = sensibility, y=elasticity, label=parametre))
ggplot()+
geom_text(data = res %>% subset(., sortie=="S2"), aes(x = sensibility, y=elasticity, label=parametre))
ggplot()+
geom_text(data = res %>% subset(., sortie=="S3"), aes(x = sensibility, y=elasticity, label=parametre))
ggplot()+
geom_text(data = res %>% subset(., sortie=="S4"), aes(x = sensibility, y=elasticity, label=parametre))
oat_index= tibble(parametre = NaN,
sensibility = NaN,
elasticity = NaN,
sortie = NaN)
for (sortie_ in 1:4){
res_s = c()
res_e = c()
for (i_ in 1:15){
resultParam_i_ = resultParam_i(i=i_,sortieNormalise,matriceOAT)
res_i = sensivity_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_s = c(res_s, res_i)
res_i = elascitiy_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_e = c(res_e, res_i)
}
tibble_sortie_i = tibble(
parametre = par_name,
sensibility = res_s,
elasticity = res_e,
sortie = rep(paste0("S", sortie_), length(res_s)))
oat_index = rbind(oat_index, tibble_sortie_i)
}
res  = oat_index[2:nrow(oat_index),]
s1 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S1"), aes(x = sensibility, y=elasticity, label=parametre))
s2 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S2"), aes(x = sensibility, y=elasticity, label=parametre))
s3 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S3"), aes(x = sensibility, y=elasticity, label=parametre))
s4 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S4"), aes(x = sensibility, y=elasticity, label=parametre))
s2
s2
plot_grid(plotlist = list(s1, s2),ncol=2)
plot_grid(plotlist = list(s1, s2, s3, s4),ncol=2)
s1 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S1"), aes(x = sensibility, y=elasticity, label=parametre,
col = Parametres_nature))
s1
Parametres_nature <- c(rep("démographiques",10),rep("épidémiques",5))
s1 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S1"), aes(x = sensibility, y=elasticity, label=parametre,
col = Parametres_nature))
s1
oat_index= tibble(parametre = NaN,
sensibility = NaN,
elasticity = NaN,
sortie = NaN)
for (sortie_ in 1:4){
res_s = c()
res_e = c()
for (i_ in 1:15){
resultParam_i_ = resultParam_i(i=i_,sortieNormalise,matriceOAT)
res_i = sensivity_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_s = c(res_s, res_i)
res_i = elascitiy_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_e = c(res_e, res_i)
}
tibble_sortie_i = tibble(
parametre = par_name,
sensibility = res_s,
elasticity = res_e,
sortie = rep(paste0("S", sortie_), length(res_s)))
oat_index = rbind(oat_index, tibble_sortie_i)
}
res  = oat_index[2:nrow(oat_index),]
nature_par <- c(rep("démographiques",10),rep("épidémiques",5))
s1 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S1"), aes(x = sensibility, y=elasticity, label=parametre,
col = nature_par))+
labs(title="S1")
s2 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S2"), aes(x = sensibility, y=elasticity, label=parametre,
col = nature_par))+
labs(title="S2")
s3 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S3"), aes(x = sensibility, y=elasticity, label=parametre,
col = nature_par))+
labs(title="S3")
s4 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S4"), aes(x = sensibility, y=elasticity, label=parametre,
col = nature_par))+
labs(title="S4")
plot_grid(plotlist = list(s1, s2, s3, s4),ncol=2)
oat_index= tibble(parametre = NaN,
sensibility = NaN,
elasticity = NaN,
sortie = NaN)
for (sortie_ in 1:4){
res_s = c()
res_e = c()
for (i_ in 1:15){
resultParam_i_ = resultParam_i(i=i_,sortieNormalise,matriceOAT)
res_i = sensivity_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_s = c(res_s, res_i)
res_i = elascitiy_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_e = c(res_e, res_i)
}
tibble_sortie_i = tibble(
parametre = par_name,
sensibility = res_s,
elasticity = res_e,
sortie = rep(paste0("S", sortie_), length(res_s)))
oat_index = rbind(oat_index, tibble_sortie_i)
}
res  = oat_index[2:nrow(oat_index),]
nature_par <- c(rep("démographiques",10),rep("épidémiques",5))
s1 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S1"), aes(x = sensibility, y=elasticity, label=parametre,
col = nature_par))+
labs(title="S1")+ theme(legend.position = "none")
s2 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S2"), aes(x = sensibility, y=elasticity, label=parametre,
col = nature_par))+
labs(title="S2")+ theme(legend.position = "none")
s3 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S3"), aes(x = sensibility, y=elasticity, label=parametre,
col = nature_par))+
labs(title="S3")+ theme(legend.position = "none")
s4 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S4"), aes(x = sensibility, y=elasticity, label=parametre,
col = nature_par))+
labs(title="S4")+ theme(legend.position = "none")
plot_grid(plotlist = list(s1, s2, s3, s4),ncol=2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(sensitivity)
library(dplyr)
library(cowplot)
source(file = "functionModProjet2023.r")
ValNominale = c(100, 0.5, 0.0014, 0.00029, 0.0019,
0.0019, 0.0082, 5, 1/365, 1/365,
0.3, 1/5, 1/20, 1/100, 0.001)
par_name = c("K", "sr", "m1", "m2", "m3", "f2", "f3", "portee",
"t1", "t2", "trans", "lat", "rec", "loss", "madd")
scenario_initial = matrix(ValNominale, nrow=1, ncol=15)
res = modAppli1(scenario_initial)
effectif_data = tibble(
temps = 1:(2*365),
S = res[[2]][4,1,],
L = res[[2]][4,2,],
I = res[[2]][4,3,],
R = res[[2]][4,4,],
N = S + L + I + R,
C1 = res[[2]][1,1,] + res[[2]][1,2,] + res[[2]][1,3,] + res[[2]][1,4,],
C2 = res[[2]][2,1,] + res[[2]][2,2,] + res[[2]][2,3,] + res[[2]][2,4,],
C3 = res[[2]][3,1,] + res[[2]][3,2,] + res[[2]][3,3,] + res[[2]][3,4,]
)
p1 = ggplot() +
geom_line(data = effectif_data, aes(x = temps, y = S, color = "1- Susceptible"), linewidth = 1) +
geom_line(data = effectif_data, aes(x = temps, y = L, color = "2- Latent"), linewidth = 1) +
geom_line(data = effectif_data, aes(x = temps, y = I, color = "3- Infectious"), linewidth = 1) +
geom_line(data = effectif_data, aes(x = temps, y = R, color = "4- Recovered"), linewidth = 1) +
geom_line(data = effectif_data, aes(x = temps, y = N, color = "Population Size"), linewidth = 1) +
labs(x = "Time", y = "Effectif") +
theme_minimal() +
ggtitle("Evolution of Epidemic stages - Initial Model")
effectif_data2 <- tibble(effectif =
c(effectif_data$C1,
effectif_data$C2,
effectif_data$C3),
temps = rep(effectif_data$temps, times = 3))  %>%
mutate(age_class = rep(c("First Age Class", "Second Age Class", "Third Age Class"), each = nrow(effectif_data) )) %>%
group_by(temps, age_class) %>%
summarise(n = sum(effectif)) %>%
mutate(percentage = n / sum(n))
p2 = ggplot(effectif_data2, aes(x=temps, y=percentage, fill=age_class)) +
geom_area(alpha=0.4 , size=1, colour="black")+
labs(fill = "Age class") +
labs(x = "Time", y = "Effectif") +
theme_minimal() +
ggtitle("Evolution of age structure - Initial Model")
p1
p2
sensivity_oat = function(lx, ly){
diff_y = max(ly) - min(ly)
diff_x = max(lx) - min(lx)
return(diff_y/diff_x)
}
elascitiy_oat = function(lx, ly){
return(sensivity_oat(lx, ly)*(mean(lx)/mean(ly)))
}
makeAnalyseOAT <- function(ValNominale){
sortie = createMatriceForOAT(ValNominale) %>%
modAppli() %>%
normaliseSortie(ValNominale)
return(sortie)
}
createMatriceForOAT <- function(ValNominale){
nbParametres = length(ValNominale)
nbScenariosParParam = 11
nbScenariosTotal = nbScenariosParParam*nbParametres
valeurMin = ValNominale * 0.75
valeurMax = ValNominale * 1.25
matrixScenario =  matrix(rep(ValNominale, each = nbScenariosTotal), nrow = nbScenariosTotal, ncol = nbParametres)
for (i in 1:nbParametres){
i_min = nbScenariosParParam*(i-1)+1
i_max = nbScenariosParParam*i
matrixScenario[i_min:i_max,i] = pracma::linspace(valeurMin[i],valeurMax[i], n = nbScenariosParParam)
}
return(matrixScenario)
}
normaliseSortie <- function(sortie,ValNominale){
sortieNominale = modAppli(matrix(ValNominale, nrow=1, ncol=15))
return(data.frame(prop_inf = sortie[,1]/sortieNominale[,1],
infec_end = sortie[,2]/sortieNominale[,2],
nb_max_infec = sortie[,3]/sortieNominale[,3],
nb_infec_year1 = sortie[,4]/sortieNominale[,4]))
}
resultParam_i = function(i,sortieNormalise,matrixScenario){
nbScenariosParParam = 11
i_min = nbScenariosParParam*(i-1)+1
i_max = nbScenariosParParam*i
resultParam_i = data.frame(parametre=matrixScenario[i_min:i_max,i],
prop_inf=sortieNormalise[i_min:i_max,1],
nb_infected_end=sortieNormalise[i_min:i_max,2],
nb_max_infec=sortieNormalise[i_min:i_max,3],
nb_infec_year1=sortieNormalise[i_min:i_max,4])
return(resultParam_i)
}
plotOATAnalysis <- function(i,sortieNormalise,matrixScenario){
resultParam_i = resultParam_i(i,sortieNormalise,matrixScenario)
p1 = ggplot() +
geom_line(data = resultParam_i, aes(x = parametre, y = prop_inf, color = "S1"), size = 1) +
geom_line(data = resultParam_i, aes(x = parametre, y = nb_infected_end, color = "S2"), size = 1) +
geom_line(data = resultParam_i, aes(x = parametre, y = nb_max_infec,  color = "S3"), size = 1) +
geom_line(data = resultParam_i, aes(x = parametre, y = nb_infec_year1,  color = "S4"), size = 1) +
scale_x_continuous(trans='log10') +
labs(x = "Parameter value", y = "Relative variation") +
theme_minimal() +
ggtitle(par_name[i])
res_plot2 = tibble(group=rep(c("S1", "S2", "S3", "S4"), each=length(resultParam_i$prop_inf)),
value = c(resultParam_i$prop_inf,
resultParam_i$nb_infected_end,
resultParam_i$nb_max_infec,
resultParam_i$nb_infec_year1))
p2 = ggplot()+
geom_boxplot(data=res_plot2, aes(y=value, fill = group))
p3 = ggarrange(p1, p2,
ncol = 2, nrow = 1)
return(p3)
}
matriceOAT = createMatriceForOAT(ValNominale)
sortieNormalise = makeAnalyseOAT(ValNominale)
head(sortieNormalise)
plotOATAnalysis(i=5,sortieNormalise,matriceOAT)
oat_index= tibble(parametre = NaN,
sensibility = NaN,
elasticity = NaN,
sortie = NaN)
for (sortie_ in 1:4){
res_s = c()
res_e = c()
for (i_ in 1:15){
resultParam_i_ = resultParam_i(i=i_,sortieNormalise,matriceOAT)
res_i = sensivity_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_s = c(res_s, res_i)
res_i = elascitiy_oat(resultParam_i_[1], resultParam_i_[sortie_+1])
res_e = c(res_e, res_i)
}
tibble_sortie_i = tibble(
parametre = par_name,
sensibility = res_s,
elasticity = res_e,
sortie = rep(paste0("S", sortie_), length(res_s)))
oat_index = rbind(oat_index, tibble_sortie_i)
}
res  = oat_index[2:nrow(oat_index),]
nature_par <- c(rep("démographiques",10),rep("épidémiques",5))
s1 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S1"), aes(x = sensibility, y=elasticity, label=parametre,
col = nature_par))+
labs(title="S1")+ theme(legend.position = "none")
s2 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S2"), aes(x = sensibility, y=elasticity, label=parametre,
col = nature_par))+
labs(title="S2")+ theme(legend.position = "none")
s3 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S3"), aes(x = sensibility, y=elasticity, label=parametre,
col = nature_par))+
labs(title="S3")+ theme(legend.position = "none")
s4 = ggplot()+
geom_text(data = res %>% subset(., sortie=="S4"), aes(x = sensibility, y=elasticity, label=parametre,
col = nature_par))+
labs(title="S4")+ theme(legend.position = "none")
plot_grid(plotlist = list(s1, s2, s3, s4),ncol=2)
res
sensivity_oat = function(lx, ly){
diff_y = max(ly) - min(ly)
diff_x = max(lx) - min(lx)
return(diff_y/diff_x)
}
elascitiy_oat = function(lx, ly){
return(sensivity_oat(lx, ly)*(mean(lx[[1]])/mean(ly[[1]])))
}
makeAnalyseOAT <- function(ValNominale){
sortie = createMatriceForOAT(ValNominale) %>%
modAppli() %>%
normaliseSortie(ValNominale)
return(sortie)
}
createMatriceForOAT <- function(ValNominale){
nbParametres = length(ValNominale)
nbScenariosParParam = 11
nbScenariosTotal = nbScenariosParParam*nbParametres
valeurMin = ValNominale * 0.75
valeurMax = ValNominale * 1.25
matrixScenario =  matrix(rep(ValNominale, each = nbScenariosTotal), nrow = nbScenariosTotal, ncol = nbParametres)
for (i in 1:nbParametres){
i_min = nbScenariosParParam*(i-1)+1
i_max = nbScenariosParParam*i
matrixScenario[i_min:i_max,i] = pracma::linspace(valeurMin[i],valeurMax[i], n = nbScenariosParParam)
}
return(matrixScenario)
}
normaliseSortie <- function(sortie,ValNominale){
sortieNominale = modAppli(matrix(ValNominale, nrow=1, ncol=15))
return(data.frame(prop_inf = sortie[,1]/sortieNominale[,1],
infec_end = sortie[,2]/sortieNominale[,2],
nb_max_infec = sortie[,3]/sortieNominale[,3],
nb_infec_year1 = sortie[,4]/sortieNominale[,4]))
}
resultParam_i = function(i,sortieNormalise,matrixScenario){
nbScenariosParParam = 11
i_min = nbScenariosParParam*(i-1)+1
i_max = nbScenariosParParam*i
resultParam_i = data.frame(parametre=matrixScenario[i_min:i_max,i],
prop_inf=sortieNormalise[i_min:i_max,1],
nb_infected_end=sortieNormalise[i_min:i_max,2],
nb_max_infec=sortieNormalise[i_min:i_max,3],
nb_infec_year1=sortieNormalise[i_min:i_max,4])
return(resultParam_i)
}
plotOATAnalysis <- function(i,sortieNormalise,matrixScenario){
resultParam_i = resultParam_i(i,sortieNormalise,matrixScenario)
p1 = ggplot() +
geom_line(data = resultParam_i, aes(x = parametre, y = prop_inf, color = "S1"), size = 1) +
geom_line(data = resultParam_i, aes(x = parametre, y = nb_infected_end, color = "S2"), size = 1) +
geom_line(data = resultParam_i, aes(x = parametre, y = nb_max_infec,  color = "S3"), size = 1) +
geom_line(data = resultParam_i, aes(x = parametre, y = nb_infec_year1,  color = "S4"), size = 1) +
scale_x_continuous(trans='log10') +
labs(x = "Parameter value", y = "Relative variation") +
theme_minimal() +
ggtitle(par_name[i])
res_plot2 = tibble(group=rep(c("S1", "S2", "S3", "S4"), each=length(resultParam_i$prop_inf)),
value = c(resultParam_i$prop_inf,
resultParam_i$nb_infected_end,
resultParam_i$nb_max_infec,
resultParam_i$nb_infec_year1))
p2 = ggplot()+
geom_boxplot(data=res_plot2, aes(y=value, fill = group))
p3 = ggarrange(p1, p2,
ncol = 2, nrow = 1)
return(p3)
}
matriceOAT = createMatriceForOAT(ValNominale)
sortieNormalise = makeAnalyseOAT(ValNominale)
head(sortieNormalise)
