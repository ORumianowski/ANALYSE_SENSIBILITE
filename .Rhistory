m1 = list(mean = 0.0014, sd = 0.0001),
m2 = list(mean = 0.00029, sd = 0.0001),
m3 = list(mean = 0.0019, sd = 0.0001),
f2 = list(mean = 0.0019, sd = 0.0001),
f3 = list(mean = 0.0082, sd = 0.001),
portee = list(mean = 5, sd = 1),
t1 = list(mean = 1/365, sd = 0.0001),
t2 = list(mean = 1/365, sd = 0.0001),
trans = list(mean = 0.3, sd = 0.02),
lat = list(mean = 1/5, sd = 0.1),
rec = list(mean = 1/20, sd = 0.001),
loss = list(mean = 1/100, sd = 0.0001),
madd = list(mean = 0.001, sd = 0.0001)
)
Fast <- fast99(model = NULL,
factors = par_name,
n = 5,
q = rep("qunif", 15),
q.arg = q.arg_
)
Fast <- fast99(model = NULL,
factors = par_name,
n = 5,
q = rep("qnorm", 15),
q.arg = q.arg_
)
Fast$X
Fast$X
par_name = c("K", "sr", "m1", "m2", "m3", "f2", "f3", "portee", "t1", "t2", "trans", "lat", "rec", "loss", "madd")
ValNominale = c(100, 0.5, 0.0014, 0.00029, 0.0019,
0.0019, 0.0082, 5, 1/365, 1/365,
0.3, 1/5, 1/20, 1/100, 0.001)
q.arg_ = list(
K = list(mean = 100, sd = 10),
sr = list(mean = 0.5, sd = 0.1),
m1 = list(mean = 0.0014, sd = 0.0001),
m2 = list(mean = 0.00029, sd = 0.0001),
m3 = list(mean = 0.0019, sd = 0.0001),
f2 = list(mean = 0.0019, sd = 0.0001),
f3 = list(mean = 0.0082, sd = 0.001),
portee = list(mean = 5, sd = 1),
t1 = list(mean = 1/365, sd = 0.0001),
t2 = list(mean = 1/365, sd = 0.0001),
trans = list(mean = 0.3, sd = 0.02),
lat = list(mean = 1/5, sd = 0.1),
rec = list(mean = 1/20, sd = 0.001),
loss = list(mean = 1/100, sd = 0.0001),
madd = list(mean = 0.001, sd = 0.0001)
)
Fast <- fast99(model = NULL,
factors = par_name,
n = 5,
q = rep("qnorm", 15),
q.arg = q.arg_
)
Fast$X
q.arg3 = list(min = c(80, 0.1, 0.0001, 0.00001, 0.00001, 0.00001, 0.00001,
1, 0.00001, 0.00001, 0.05, 0.05, 0.00001, 0.00001, 0.00001),
max = c(120, 9.9, 0.1, 0.1,0.1,0.1,0.1, 10,
0.1, 0.1, 0.6, 0.6, 0.1, 0.1, 0.1))
q.arg3 %>% str()
Fast <- fast99(model = NULL,
factors = par_name,
n = 5,
q = rep("qunif", 15),
q.arg = q.arg3
)
q.arg4 = list(min = ValNominale*.75, max = ValNominale*1.25)
q.arg4
Fast <- fast99(model = NULL,
factors = par_name,
n = 5,
q = rep("qunif", 15),
q.arg = q.arg3
)
Fast <- fast99(model = NULL,
factors = 15,
n = 5,
q = rep("qunif", 15),
q.arg = list(min = 0, max = 1)
)
Fast$X
Fast <- fast99(model = NULL,
factors = 15,
n = 5,
q = rep("qunif", 15),
q.arg = list(min = 0, max = 1)
)
q.arg3 = list(min = c(80, 0.1, 0.0001, 0.00001, 0.00001, 0.00001, 0.00001,
1, 0.00001, 0.00001, 0.05, 0.05, 0.00001, 0.00001, 0.00001),
max = c(120, 9.9, 0.1, 0.1,0.1,0.1,0.1, 10,
0.1, 0.1, 0.6, 0.6, 0.1, 0.1, 0.1))
q.arg3 %>% str()
q.arg4 = list(min = ValNominale*.75, max = ValNominale*1.25)
Fast <- fast99(model = NULL,
factors = par_name,
n = 5,
q = rep("qunif", 15),
q.arg = q.arg3
)
Fast <- fast99(model = NULL,
factors = 15,
n = 5,
q = rep("qunif", 15),
q.arg = list(min = 0, max = 1)
)
Fast$X
Fast <- fast99(model = NULL,
factors = 1,
n = 5,
q = "qunif",
q.arg = list(min = 0, max = 1)
)
Fast$X
Fast <- fast99(model = NULL,
factors = 1,
n = 10,
q = "qunif",
q.arg = list(min = 0, max = 1)
)
Fast$X
Fast <- fast99(model = NULL,
factors = 3,
n = 5,
q = "qunif",
q.arg = list(min = 0, max = 1)
)
Fast$X
Fast <- fast99(model = NULL,
factors = 3,
n = 5,
q = "qunif",
q.arg = list(min = rep(0, 5), max = rep(1, 5))
)
Fast$X
q.arg3 = list(min = c(80, 0.1, 0.0001, 0.00001, 0.00001, 0.00001, 0.00001,
1, 0.00001, 0.00001, 0.05, 0.05, 0.00001, 0.00001, 0.00001),
max = c(120, 9.9, 0.1, 0.1,0.1,0.1,0.1, 10,
0.1, 0.1, 0.6, 0.6, 0.1, 0.1, 0.1))
q.arg3 %>% str()
q.arg4 = list(min = ValNominale*.75, max = ValNominale*1.25)
Fast <- fast99(model = NULL,
factors = par_name,
n = 5,
q = rep("qunif", 15),
q.arg = q.arg3
)
Fast <- fast99(model = NULL,
factors = par_name,
n = 25,
q = rep("qunif", 15),
q.arg = q.arg3
)
Fast$X
Fast <- fast99(model = NULL,
factors = par_name,
n = 100,
q = rep("qunif", 15),
q.arg = q.arg4
)
Fast$X
par_name = c("K", "sr", "m1", "m2", "m3", "f2", "f3", "portee", "t1", "t2", "trans", "lat", "rec", "loss", "madd")
q.arg4 = list(min = ValNominale*.75, max = ValNominale*1.25)
Fast <- fast99(model = NULL,
factors = par_name,
n = 100,
q = rep("qunif", 15),
q.arg = q.arg4
)
Fast$X
linspace(0, 1, n = 100)
install.packages("pracma")
pracma::linspae(0,1, n = 100)
pracma::linspace(0,1, n = 100)
par_name = c("K", "sr", "m1", "m2", "m3", "f2", "f3", "portee", "t1", "t2", "trans", "lat", "rec", "loss", "madd")
ValNominale = c(100,
0.5, 0.0014, 0.00029, 0.0019,
0.0019, 0.0082, 5, 1/365, 1/365,
0.3, 1/5, 1/20, 1/100, 0.001)
scenario_OAT =  matrix(rep(ValNominale, each = 11), nrow = 11, ncol = 15)
graph_oat = function(i, bornes){
scenario_OAT_i = scenario_OAT
inf = ValNominale[i] * 0.75
sup = ValNominale[i] * 1.25
if (bornes[1] != Inf){
i=2
scenario_OAT_i[, i] = pracma::linspace(inf,sup, n = 10)
}
else{
scenario_OAT_i[, i] = ValNominale[i] * c(1,
0, 1/100, 1/10, 1/5, 0.9,
1.1, 2, 5, 10, 100)
}
sortie = modAppli(scenario_OAT_i)
res_plot = tibble(paramettre_i = scenario_OAT_i[, i],
prop_inf = sortie[1]/sortie[1,1],
infec_end = sortie[2]/sortie[1,2],
nb_max_infec = sortie[3]/sortie[1,3] ,
nb_infec_year1 = sortie[4]/sortie[1,4])
ggplot() +
geom_line(data = res_plot, aes(x = paramettre_i, y = prop_inf, color = "S1"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = infec_end, color = "S2"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_max_infec,  color = "S3"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_infec_year1,  color = "S4"), size = 1) +
scale_x_continuous(trans='log10') +
labs(x = "Parameter value", y = "Relative variation") +
theme_minimal() +
ggtitle(par_name[i])
}
ggarrange(graph_oat(i = 1, bornes = c(Inf, Inf)),
graph_oat(i = 2, bornes = c(0, 1)),
graph_oat(i = 3, bornes = c(0, 1)),
graph_oat(i = 4, bornes = c(0, 1)),
graph_oat(i = 4, bornes = c(0, 1)),
graph_oat(i = 5, bornes = c(Inf, Inf)),
graph_oat(i = 7, bornes = c(Inf, Inf)),
graph_oat(i = 8, bornes = c(Inf, Inf)),
graph_oat(i = 9, bornes = c(0, 1)),
graph_oat(i = 10, bornes = c(0,1)),
graph_oat(i = 11, bornes = c(0, 1)),
graph_oat(i = 12, bornes = c(0, 1)),
graph_oat(i = 13, bornes = c(0, 1)),
graph_oat(i = 14, bornes = c(0, 1)),
graph_oat(i = 15, bornes = c(0, 1)),
ncol = 3, nrow = 5)
par_name = c("K", "sr", "m1", "m2", "m3", "f2", "f3", "portee", "t1", "t2", "trans", "lat", "rec", "loss", "madd")
ValNominale = c(100,
0.5, 0.0014, 0.00029, 0.0019,
0.0019, 0.0082, 5, 1/365, 1/365,
0.3, 1/5, 1/20, 1/100, 0.001)
scenario_OAT =  matrix(rep(ValNominale, each = 11), nrow = 11, ncol = 15)
graph_oat = function(i, bornes){
scenario_OAT_i = scenario_OAT
inf = ValNominale[i] * 0.75
sup = ValNominale[i] * 1.25
if (bornes[1] != Inf){
i=2
scenario_OAT_i[, i] = pracma::linspace(inf,sup, n = 11)
}
else{
scenario_OAT_i[, i] = ValNominale[i] * c(1,
0, 1/100, 1/10, 1/5, 0.9,
1.1, 2, 5, 10, 100)
}
sortie = modAppli(scenario_OAT_i)
res_plot = tibble(paramettre_i = scenario_OAT_i[, i],
prop_inf = sortie[1]/sortie[1,1],
infec_end = sortie[2]/sortie[1,2],
nb_max_infec = sortie[3]/sortie[1,3] ,
nb_infec_year1 = sortie[4]/sortie[1,4])
ggplot() +
geom_line(data = res_plot, aes(x = paramettre_i, y = prop_inf, color = "S1"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = infec_end, color = "S2"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_max_infec,  color = "S3"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_infec_year1,  color = "S4"), size = 1) +
scale_x_continuous(trans='log10') +
labs(x = "Parameter value", y = "Relative variation") +
theme_minimal() +
ggtitle(par_name[i])
}
ggarrange(graph_oat(i = 1, bornes = c(Inf, Inf)),
graph_oat(i = 2, bornes = c(0, 1)),
graph_oat(i = 3, bornes = c(0, 1)),
graph_oat(i = 4, bornes = c(0, 1)),
graph_oat(i = 4, bornes = c(0, 1)),
graph_oat(i = 5, bornes = c(Inf, Inf)),
graph_oat(i = 7, bornes = c(Inf, Inf)),
graph_oat(i = 8, bornes = c(Inf, Inf)),
graph_oat(i = 9, bornes = c(0, 1)),
graph_oat(i = 10, bornes = c(0,1)),
graph_oat(i = 11, bornes = c(0, 1)),
graph_oat(i = 12, bornes = c(0, 1)),
graph_oat(i = 13, bornes = c(0, 1)),
graph_oat(i = 14, bornes = c(0, 1)),
graph_oat(i = 15, bornes = c(0, 1)),
ncol = 3, nrow = 5)
graph_oat(i = 2, bornes = c(0, 1))
scenario_OAT
i = 2
bornes
bornes = c(0, 1)
inf = ValNominale[i] * 0.75
sup = ValNominale[i] * 1.25
inf
(bornes[1] != Inf)
pracma::linspace(inf,sup, n = 11)
scenario_OAT_i[, i]
scenario_OAT_i = scenario_OAT
scenario_OAT_i
scenario_OAT_i[, i] = pracma::linspace(inf,sup, n = 11)
scenario_OAT_i
sortie = modAppli(scenario_OAT_i)
sortie
res_plot = tibble(paramettre_i = scenario_OAT_i[, i],
prop_inf = sortie[1]/sortie[1,1],
infec_end = sortie[2]/sortie[1,2],
nb_max_infec = sortie[3]/sortie[1,3] ,
nb_infec_year1 = sortie[4]/sortie[1,4])
sortie
res_plot = tibble(paramettre_i = scenario_OAT_i[, i],
prop_inf = sortie[1]/sortie[1,1],
infec_end = sortie[2]/sortie[1,2],
nb_max_infec = sortie[3]/sortie[1,3] ,
nb_infec_year1 = sortie[4]/sortie[1,4])
ggplot() +
geom_line(data = res_plot, aes(x = paramettre_i, y = prop_inf, color = "S1"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = infec_end, color = "S2"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_max_infec,  color = "S3"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_infec_year1,  color = "S4"), size = 1) +
scale_x_continuous(trans='log10') +
labs(x = "Parameter value", y = "Relative variation") +
theme_minimal() +
ggtitle(par_name[i])
ggplot() +
geom_line(data = res_plot, aes(x = paramettre_i, y = prop_inf, color = "S1"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = infec_end, color = "S2"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_max_infec,  color = "S3"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_infec_year1,  color = "S4"), size = 1) +
scale_x_continuous(trans='log10') +
labs(x = "Parameter value", y = "Relative variation") +
theme_minimal() +
ggtitle(par_name[i])
res_plot
res_plot
paramettre_i = scenario_OAT_i[, i]
paramettre_i
res_plot = tibble(paramettre_i = scenario_OAT_i[, i],
prop_inf = sortie[1]/sortie[1,1],
infec_end = sortie[2]/sortie[1,2],
nb_max_infec = sortie[3]/sortie[1,3] ,
nb_infec_year1 = sortie[4]/sortie[1,4])
res_plot
sortie
sortie[1]
sortie[,1]
res_plot = tibble(paramettre_i = scenario_OAT_i[, i],
prop_inf = sortie[,1]/sortie[1,1],
infec_end = sortie[,2]/sortie[1,2],
nb_max_infec = sortie[,3]/sortie[1,3] ,
nb_infec_year1 = sortie[,4]/sortie[1,4])
ggplot() +
geom_line(data = res_plot, aes(x = paramettre_i, y = prop_inf, color = "S1"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = infec_end, color = "S2"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_max_infec,  color = "S3"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_infec_year1,  color = "S4"), size = 1) +
scale_x_continuous(trans='log10') +
labs(x = "Parameter value", y = "Relative variation") +
theme_minimal() +
ggtitle(par_name[i])
par_name = c("K", "sr", "m1", "m2", "m3", "f2", "f3", "portee", "t1", "t2", "trans", "lat", "rec", "loss", "madd")
ValNominale = c(100,
0.5, 0.0014, 0.00029, 0.0019,
0.0019, 0.0082, 5, 1/365, 1/365,
0.3, 1/5, 1/20, 1/100, 0.001)
scenario_OAT =  matrix(rep(ValNominale, each = 11), nrow = 11, ncol = 15)
graph_oat = function(i, bornes){
scenario_OAT_i = scenario_OAT
inf = ValNominale[i] * 0.75
sup = ValNominale[i] * 1.25
if (bornes[1] != Inf){
scenario_OAT_i[, i] = pracma::linspace(inf,sup, n = 11)
}
else{
scenario_OAT_i[, i] = ValNominale[i] * c(1,
0, 1/100, 1/10, 1/5, 0.9,
1.1, 2, 5, 10, 100)
}
sortie = modAppli(scenario_OAT_i)
res_plot = tibble(paramettre_i = scenario_OAT_i[, i],
prop_inf = sortie[,1]/sortie[1,1],
infec_end = sortie[,2]/sortie[1,2],
nb_max_infec = sortie[,3]/sortie[1,3] ,
nb_infec_year1 = sortie[,4]/sortie[1,4])
ggplot() +
geom_line(data = res_plot, aes(x = paramettre_i, y = prop_inf, color = "S1"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = infec_end, color = "S2"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_max_infec,  color = "S3"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_infec_year1,  color = "S4"), size = 1) +
scale_x_continuous(trans='log10') +
labs(x = "Parameter value", y = "Relative variation") +
theme_minimal() +
ggtitle(par_name[i])
}
graph_oat(i = 2, bornes = c(0, 1))
ggarrange(graph_oat(i = 1, bornes = c(Inf, Inf)),
graph_oat(i = 2, bornes = c(0, 1)),
graph_oat(i = 3, bornes = c(0, 1)),
graph_oat(i = 4, bornes = c(0, 1)),
graph_oat(i = 4, bornes = c(0, 1)),
graph_oat(i = 5, bornes = c(Inf, Inf)),
graph_oat(i = 7, bornes = c(Inf, Inf)),
graph_oat(i = 8, bornes = c(Inf, Inf)),
graph_oat(i = 9, bornes = c(0, 1)),
graph_oat(i = 10, bornes = c(0,1)),
graph_oat(i = 11, bornes = c(0, 1)),
graph_oat(i = 12, bornes = c(0, 1)),
graph_oat(i = 13, bornes = c(0, 1)),
graph_oat(i = 14, bornes = c(0, 1)),
graph_oat(i = 15, bornes = c(0, 1)),
ncol = 3, nrow = 5)
par_name = c("K", "sr", "m1", "m2", "m3", "f2", "f3", "portee", "t1", "t2", "trans", "lat", "rec", "loss", "madd")
ValNominale = c(100,
0.5, 0.0014, 0.00029, 0.0019,
0.0019, 0.0082, 5, 1/365, 1/365,
0.3, 1/5, 1/20, 1/100, 0.001)
scenario_OAT =  matrix(rep(ValNominale, each = 11), nrow = 11, ncol = 15)
graph_oat = function(i, bornes){
scenario_OAT_i = scenario_OAT
inf = ValNominale[i] * 0.75
sup = ValNominale[i] * 1.25
scenario_OAT_i[, i] = pracma::linspace(inf,sup, n = 11)
sortie = modAppli(scenario_OAT_i)
res_plot = tibble(paramettre_i = scenario_OAT_i[, i],
prop_inf = sortie[,1]/sortie[1,1],
infec_end = sortie[,2]/sortie[1,2],
nb_max_infec = sortie[,3]/sortie[1,3] ,
nb_infec_year1 = sortie[,4]/sortie[1,4])
ggplot() +
geom_line(data = res_plot, aes(x = paramettre_i, y = prop_inf, color = "S1"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = infec_end, color = "S2"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_max_infec,  color = "S3"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_infec_year1,  color = "S4"), size = 1) +
scale_x_continuous(trans='log10') +
labs(x = "Parameter value", y = "Relative variation") +
theme_minimal() +
ggtitle(par_name[i])
}
#graph_oat(i = 2, bornes = c(0, 1))
par_name = c("K", "sr", "m1", "m2", "m3", "f2", "f3", "portee", "t1", "t2", "trans", "lat", "rec", "loss", "madd")
ValNominale = c(100,
0.5, 0.0014, 0.00029, 0.0019,
0.0019, 0.0082, 5, 1/365, 1/365,
0.3, 1/5, 1/20, 1/100, 0.001)
scenario_OAT =  matrix(rep(ValNominale, each = 11), nrow = 11, ncol = 15)
graph_oat = function(i){
scenario_OAT_i = scenario_OAT
inf = ValNominale[i] * 0.75
sup = ValNominale[i] * 1.25
scenario_OAT_i[, i] = pracma::linspace(inf,sup, n = 11)
sortie = modAppli(scenario_OAT_i)
res_plot = tibble(paramettre_i = scenario_OAT_i[, i],
prop_inf = sortie[,1]/sortie[1,1],
infec_end = sortie[,2]/sortie[1,2],
nb_max_infec = sortie[,3]/sortie[1,3] ,
nb_infec_year1 = sortie[,4]/sortie[1,4])
ggplot() +
geom_line(data = res_plot, aes(x = paramettre_i, y = prop_inf, color = "S1"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = infec_end, color = "S2"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_max_infec,  color = "S3"), size = 1) +
geom_line(data = res_plot, aes(x = paramettre_i, y = nb_infec_year1,  color = "S4"), size = 1) +
scale_x_continuous(trans='log10') +
labs(x = "Parameter value", y = "Relative variation") +
theme_minimal() +
ggtitle(par_name[i])
}
#graph_oat(i = 2, bornes = c(0, 1))
ggarrange(graph_oat(i = 1),
graph_oat(i = 2),
graph_oat(i = 3),
graph_oat(i = 4),
graph_oat(i = 5),
graph_oat(i = 7),
graph_oat(i = 8),
graph_oat(i = 9),
graph_oat(i = 10),
graph_oat(i = 11),
graph_oat(i = 12),
graph_oat(i = 13),
graph_oat(i = 14),
graph_oat(i = 15),
ncol = 3, nrow = 5)
res_plot
res_plot2 = res_plot %>%
mutate(amplitude_S1 = max(prop_inf) - min(prop_inf),
amplitude_S2 = max(infec_end)-min(infec_end),
amplitude_S3 = max(nb_max_infec)-min(nb_max_infec),
amplitude_S4 = max(nb_infec_year1)-min(nb_infec_year1),
sd_S1 = sd(prop_inf),
sd_S2 = sd(infec_end),
sd_S3 = sd(nb_max_infec),
sd_S4 = sd(nb_infec_year1))
res_plot2
res_plot = res_plot %>%
mutate(amplitude_S1 = max(prop_inf) - min(prop_inf),
amplitude_S2 = max(infec_end)-min(infec_end),
amplitude_S3 = max(nb_max_infec)-min(nb_max_infec),
amplitude_S4 = max(nb_infec_year1)-min(nb_infec_year1),
sd_S1 = sd(prop_inf),
sd_S2 = sd(infec_end),
sd_S3 = sd(nb_max_infec),
sd_S4 = sd(nb_infec_year1))
res_plot
res_plot2 = tibble(
amplitude_S1 = max(prop_inf) - min(prop_inf),
amplitude_S2 = max(infec_end)-min(infec_end),
amplitude_S3 = max(nb_max_infec)-min(nb_max_infec),
amplitude_S4 = max(nb_infec_year1)-min(nb_infec_year1),
sd_S1 = sd(prop_inf),
sd_S2 = sd(infec_end),
sd_S3 = sd(nb_max_infec),
sd_S4 = sd(nb_infec_year1))
res_plot2 = tibble(
amplitude_S1 = max(res_plot$prop_inf) - min(res_plot$prop_inf),
amplitude_S2 = max(res_plot$infec_end)-min(res_plot$infec_end),
amplitude_S3 = max(res_plot$nb_max_infec)-min(res_plot$nb_max_infec),
amplitude_S4 = max(res_plot$nb_infec_year1)-min(res_plot$nb_infec_year1),
sd_S1 = sd(res_plot$prop_inf),
sd_S2 = sd(res_plot$infec_end),
sd_S3 = sd(res_plot$nb_max_infec),
sd_S4 = sd(res_plot$nb_infec_year1))
res_plot2
plot(res_plot2)
