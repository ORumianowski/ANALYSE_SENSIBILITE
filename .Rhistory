binf=lowerValues,
bsup=upperValues)
get_dfMorris <- function(Morris){
# Cette fonction sert à récupérer mu, mu* et sigma pour chaque sortie du modèle sous
# la forme d'un data frame
dfMorris = getMorrisResult(Morris$ee,mean,"mu") %>%
cbind(getMorrisResult(abs(Morris$ee),mean,"mu.star")) %>% # mu.star mesure la sensibilité
cbind(getMorrisResult(Morris$ee,sd,"sigma")) # sigma mesure interactions et relations non linéaires
return(dfMorris)
}
getMorrisResult <- function(Morris_ee, functionToApply,parameter){
# Sous fonction de get_dfMorris pour calculer mu, mu* ou sigma
# en appliquant la methode donnée dans l'aide de la fonction morris
df = apply(Morris_ee, 3, function(M){apply(M, 2, functionToApply)}) %>%
as.data.frame() %>%
renameColMorris(parameter)
}
get_dfMorris <- function(Morris){
# Cette fonction sert à récupérer mu, mu* et sigma pour chaque sortie du modèle sous
# la forme d'un data frame
dfMorris = getMorrisResult(Morris$ee,mean,"mu") %>%
cbind(getMorrisResult(abs(Morris$ee),mean,"mu.star")) %>% # mu.star mesure la sensibilité
cbind(getMorrisResult(Morris$ee,sd,"sigma")) # sigma mesure interactions et relations non linéaires
return(dfMorris)
}
getMorrisResult <- function(Morris_ee, functionToApply,parameter){
# Sous fonction de get_dfMorris pour calculer mu, mu* ou sigma
# en appliquant la methode donnée dans l'aide de la fonction morris
df = apply(Morris_ee, 3, function(M){apply(M, 2, functionToApply)}) %>%
as.data.frame() %>%
renameColMorris(parameter)
}
plotMorris <- function(mu.star_SX,sigma_SX,title="Analyse de Morris",parametersList=par_name){
Parametres <- c(rep("démographiques",10),rep("épidémiques",5))
plot <- ggplot(data=NULL,aes(x=mu.star_SX,y=sigma_SX,col=Parametres)) +
geom_rect(aes(fill = Parametres),
xmin = -Inf, xmax = 0.1, ymin = -Inf, ymax = Inf, alpha = 0.3, fill="lightyellow") +
geom_rect(aes(fill = Parametres),
xmin = 0.1, xmax = Inf, ymin = -Inf, ymax = 0.1, alpha = 0.3, fill="orange") +
geom_rect(aes(fill = Parametres),
xmin = 0.1, xmax = Inf, ymin = 0.1, ymax = Inf, alpha = 0.3, fill="lightcyan") +
geom_text(aes(label=parametersList),size=2) +
scale_color_manual(values = c("darkblue","darkred")) +
xlab(label="mu*") +
ylab(label="sigma") +
labs(title = title) +
theme_minimal()+
theme(text = element_text(size = 6))
return(plot)
}
dfMorris <- get_dfMorris(Morris)
plot_S1 <- plotMorris(mu.star_SX=dfMorris$mu.star_S1,sigma_SX=dfMorris$sigma_S1,
title="Sortie 1 : Prévalence à la fin de l'étude")
plot_S2 <- plotMorris(mu.star_SX=dfMorris$mu.star_S2,sigma_SX=dfMorris$sigma_S2,
title="Sortie 2 : Incidence à la fin de l'étude")
plot_S3 <- plotMorris(mu.star_SX=dfMorris$mu.star_S3,sigma_SX=dfMorris$sigma_S3,
title="Sortie 3 : Pic épidémique")
plot_S4 <- plotMorris(mu.star_SX=dfMorris$mu.star_S4,sigma_SX=dfMorris$sigma_S4,
title = "Sortie 4 : Nombre d'infection la première année")
plot_S5 <- plotMorris(mu.star_SX=dfMorris$mu.star_S5,sigma_SX=dfMorris$sigma_S4,
title = "Sortie 5 : Indicence moyenne sur la période d'étude")
plot_S6 <- plotMorris(mu.star_SX=dfMorris$mu.star_S6,sigma_SX=dfMorris$sigma_S4,
title = "Sortie 6 : Prévalence par sur un an")
grid <- plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4,plot_S5, plot_S6),ncol=2)
plot_grid(
ggdraw() + draw_text("Analyse de Morris", x = 0.5, y = 1, vjust = 2, hjust = 0.5, size = 16),
grid,
ncol = 1,
rel_heights = c(0.1, 1)
)
scenarios_par_param = 1000
Fast1000 <- fast99(model = NULL,
factors = par_name,
n = scenarios_par_param,
q = rep("qunif", 15),
q.arg =q.arg4)
sample1000 = Fast1000$X
sample1000
par(mfrow=c(2,2), mar = c(3, 3, 1, 1), cex.lab = 0.7, mgp = c(1.5, 0.5, 0))
for (i in c(1,4)){
valueMin = q.arg4[[i]][[1]]
valueMax = q.arg4[[i]][[2]]
plot(sample1000[,i],pch=20, cex=.7,ylab=paste(par_name[i],"value"),
main=paste("Variation de",par_name[i]),
xlab="Numéro de la simulation")
abline(h=valueMin,col="red",lty=2)
abline(h=valueMax,col="red",lty=2)
hist(sample1000[,i],breaks = 100, main=paste("Répartition des valeurs pour",param),
xlab="Valeur")
}
par(mfrow=c(2,2), mar = c(3, 3, 1, 1), cex.lab = 0.7, mgp = c(1.5, 0.5, 0))
plot(sample1000[,11],sample1000[,12],pch=20, cex=.7,
xlab="Valeur du paramètre trans",
ylab="Valeur du paramètre lat")
plot(sample1000[,1],sample1000[,15],pch=20, cex=.7,
xlab="Valeur du paramètre K",
ylab="Valeur du paramètre madd")
plot(sample1000[,3],sample1000[,4],pch=20, cex=.7,
xlab="Valeur du paramètre m1",
ylab="Valeur du paramètre m2")
plot(sample1000[,3],sample1000[,5],pch=20, cex=.7,
xlab="Valeur du paramètre m1",
ylab="Valeur du paramètre m3")
result_fast1000 = modAppli(sample1000)
# head(result_fast100)
par(mfrow=c(2,2), cex.lab = 0.8,cex.main = 0.9)
title = paste("Distribution pour la sortie",
c("1 \n (nombre d'infectés le dernier jour)",
"2 \n (nombre d'infections le dernier jour)",
"3 \n (nombre d'infectés sur les 2 années)",
"4 \n (nombre d'infection la première année)",
"5 \n (incidence moyenne)",
"6 \n (prévalence par année)"
))
for (i in 1:6){
hist(result_fast1000[,i],main=title[i],xlab="Valeurs",ylab="Fréquence",breaks=100,col="black")
}
# on garde uniquement les sortie interprétables
sortie_interpetable = c(3, 4, 5)
# on calcule des indices de sensibilité avec tell()
indice_sensibilite_100 <- lapply(sortie_interpetable, function(i) tell(Fast100, result_fast100[, i]))
# on garde uniquement les sortie interprétables
sortie_interpetable = c(3, 4, 5)
# on calcule des indices de sensibilité avec tell()
indice_sensibilite_1000 <- lapply(sortie_interpetable, function(i) tell(Fast1000, result_fast1000[, i]))
# On fait une visualisation graphiquem
plot.fast99 <- function(x, ylim = c(0, 1), main = NULL, names.arg = NULL, ...) {
S <- rbind(x$D1 / x$V, 1 - x$Dt / x$V - x$D1 / x$V)
colnames(S) <- colnames(x$X)
bar.col <- c("darkblue","darkred")
barplot(S, ylim = ylim, col = bar.col, main = main, names.arg = names.arg,cex.names=.43)
legend("topright", c("Effet principal", "Interactions"), fill = bar.col, cex=0.6)
abline(h=0.2, col = "gray", lty = 2)
}
par(mfrow=c(2,2), cex.main=0.7, mar=c(2, 3, 2, 2), cex.axis=0.6)
plot.fast99(indice_sensibilite_100[[1]], main="Analyse FAST avec 100 scénarios par paramètre \n (résulat pour la sortie 1)")
plot.fast99(indice_sensibilite_100[[2]], main="Analyse FAST avec 100 scénarios par paramètre \n (résulat pour la sortie 3)")
plot.fast99(indice_sensibilite_1000[[1]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 1)")
plot.fast99(indice_sensibilite_1000[[2]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
# On fait une visualisation graphiquem
plot.fast99 <- function(x, ylim = c(0, 1), main = NULL, names.arg = NULL, ...) {
S <- rbind(x$D1 / x$V, 1 - x$Dt / x$V - x$D1 / x$V)
colnames(S) <- colnames(x$X)
bar.col <- c("darkblue","darkred")
barplot(S, ylim = ylim, col = bar.col, main = main, names.arg = names.arg,cex.names=.43)
legend("topright", c("Effet principal", "Interactions"), fill = bar.col, cex=0.6)
abline(h=0.2, col = "gray", lty = 2)
}
par(mfrow=c(2,2), cex.main=0.7, mar=c(2, 3, 2, 2), cex.axis=0.6)
plot.fast99(indice_sensibilite_1000[[1]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 1)")
plot.fast99(indice_sensibilite_1000[[2]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
plot.fast99(indice_sensibilite_1000[[1]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 1)")
plot.fast99(indice_sensibilite_1000[[2]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
plot.fast99(indice_sensibilite_1000[[3]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
# On fait une visualisation graphiquem
plot.fast99 <- function(x, ylim = c(0, 1), main = NULL, names.arg = NULL, ...) {
S <- rbind(x$D1 / x$V, 1 - x$Dt / x$V - x$D1 / x$V)
colnames(S) <- colnames(x$X)
bar.col <- c("darkblue","darkred")
barplot(S, ylim = ylim, col = bar.col, main = main, names.arg = names.arg,cex.names=.43)
legend("topright", c("Effet principal", "Interactions"), fill = bar.col, cex=0.6)
abline(h=0.2, col = "gray", lty = 2)
}
par(mfrow=c(2,2), cex.main=0.7, mar=c(2, 3, 2, 2), cex.axis=0.6)
plot.fast99(indice_sensibilite_1000[[1]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 1)")
plot.fast99(indice_sensibilite_1000[[2]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
plot.fast99(indice_sensibilite_1000[[3]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
# On fait une visualisation graphiquem
plot.fast99 <- function(x, ylim = c(0, 1), main = NULL, names.arg = NULL, ...) {
S <- rbind(x$D1 / x$V, 1 - x$Dt / x$V - x$D1 / x$V)
colnames(S) <- colnames(x$X)
bar.col <- c("darkblue","darkred")
barplot(S, ylim = ylim, col = bar.col, main = main, names.arg = names.arg,cex.names=.43)
legend("topright", c("Effet principal", "Interactions"), fill = bar.col, cex=0.6)
abline(h=0.2, col = "gray", lty = 2)
}
par(mfrow=c(2,2), cex.main=0.7, mar=c(2, 3, 2, 2), cex.axis=0.6)
plot.fast99(indice_sensibilite_1000[[1]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
plot.fast99(indice_sensibilite_1000[[2]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 4)")
plot.fast99(indice_sensibilite_1000[[3]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 5)")
parameters <- data.frame(
Méthode = c("Sortie 1","Sortie 2","Sortie 3", "Sortie 4"),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee"),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat"),
FAST = c("rec, loss", " ", "rec, trans, K, lat", " ")
)
parameter_table <- kable(parameters, "html") %>%
kable_styling(full_width = FALSE) %>%
column_spec(1, bold = TRUE)
parameter_table
parameters <- data.frame(
Méthode = c("Sortie 1","Sortie 2","Sortie 3", "Sortie 4"),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee"),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat"),
FAST = c("rec, loss", " ", "rec, trans, K, lat", " "),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee"),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat"),
FAST = c("rec, loss", " ", "rec, trans, K, lat", " ")
)
parameter_table <- kable(parameters, "html") %>%
kable_styling(full_width = FALSE) %>%
column_spec(1, bold = TRUE)
parameter_table
parameters <- data.frame(
Méthode = c("Sortie 1","Sortie 2","Sortie 3", "Sortie 4"),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee"),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat"),
FAST = c("rec, loss", " ", "rec, trans, K, lat", " "),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee"),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat"),
FAST = c("rec, loss", " ", "rec, trans, K, lat", " ")
)
colnames(parameters) = c("Méthode", "OAT", "Morris", "FAST", "OAT", "Morris", "Fast")
parameter_table <- kable(parameters, "html") %>%
kable_styling(full_width = FALSE) %>%
column_spec(1, bold = TRUE)
parameter_table
parameters <- data.frame(
Méthode = c("Sortie 1","Sortie 2","Sortie 3", "Sortie 4", "Sortie 5", "Sortie 6"),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee"),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat"),
FAST = c("rec, loss", " ", "rec, trans, K, lat", " "),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee"),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat"),
FAST = c("rec, loss", " ", "rec, trans, K, lat", " ")
)
parameters <- data.frame(
Méthode = c("Sortie 1","Sortie 2","Sortie 3", "Sortie 4", "Sortie 5", "Sortie 6"),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee", "", ""),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat", "", ""),
FAST = c("rec, loss", " ", "rec, trans, K, lat", " ", "", ""),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee", "", ""),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat", "", ""),
FAST = c("rec, loss", " ", "rec, trans, K, lat", " ", "", "")
)
colnames(parameters) = c("Méthode", "OAT", "Morris", "FAST", "OAT", "Morris", "Fast")
parameter_table <- kable(parameters, "html") %>%
kable_styling(full_width = FALSE) %>%
column_spec(1, bold = TRUE)
parameter_table
library(knitr)
library(kableExtra)
# Créez un data frame de démonstration
df <- data.frame(
Groupe1 = c(1, 2, 3),
Groupe2 = c(4, 5, 6),
Colonne3 = c("A", "B", "C"),
Colonne4 = c("X", "Y", "Z")
)
# Utilisez kable pour générer le tableau
kable(df, "html") %>%
column_spec(1:2, bold = TRUE)
parameters <- data.frame(
Méthode = c("Sortie 1","Sortie 2","Sortie 3", "Sortie 4", "Sortie 5", "Sortie 6"),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee", "", ""),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat", "", ""),
FAST = c("rec, loss", " ", "rec, trans, K, lat", " ", "", ""),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee", "", ""),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat", "", ""),
FAST = c("rec, loss", " ", "rec, trans, K, lat", " ", "", "")
)
colnames(parameters) = c("Méthode", "OAT", "Morris", "FAST", "OAT", "Morris", "Fast")
parameter_table <- kable(parameters, "html") %>%
kable_styling(full_width = FALSE) %>%
column_spec(1, bold = TRUE)  %>%
add_header_above(c(" " = 1, "Sans saisonnalité" = 3, "Avec saisonnalité" = 3))
parameter_table
par(mfrow=c(2,3), cex.lab = 0.8,cex.main = 0.9)
title = paste("Distribution pour la sortie",
c("1 \n (nombre d'infectés le dernier jour)",
"2 \n (nombre d'infections le dernier jour)",
"3 \n (nombre d'infectés sur les 2 années)",
"4 \n (nombre d'infection la première année)",
"5 \n (incidence moyenne)",
"6 \n (prévalence par année)"
))
for (i in 1:6){
hist(result_fast1000[,i],main=title[i],xlab="Valeurs",ylab="Fréquence",breaks=100,col="black")
}
# On fait une visualisation graphiquem
plot.fast99 <- function(x, ylim = c(0, 1), main = NULL, names.arg = NULL, ...) {
S <- rbind(x$D1 / x$V, 1 - x$Dt / x$V - x$D1 / x$V)
colnames(S) <- colnames(x$X)
bar.col <- c("darkblue","darkred")
barplot(S, ylim = ylim, col = bar.col, main = main, names.arg = names.arg,cex.names=.43)
legend("topright", c("Effet principal", "Interactions"), fill = bar.col, cex=0.6)
abline(h=0.2, col = "gray", lty = 2)
}
par(mfrow=c(1,3), cex.lab = 0.8,cex.main = 0.9)
plot.fast99(indice_sensibilite_1000[[1]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
plot.fast99(indice_sensibilite_1000[[2]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 4)")
plot.fast99(indice_sensibilite_1000[[3]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 5)")
# On fait une visualisation graphiquem
plot.fast99 <- function(x, ylim = c(0, 1), main = NULL, names.arg = NULL, ...) {
S <- rbind(x$D1 / x$V, 1 - x$Dt / x$V - x$D1 / x$V)
colnames(S) <- colnames(x$X)
bar.col <- c("darkblue","darkred")
barplot(S, ylim = ylim, col = bar.col, main = main, names.arg = names.arg,cex.names=.43)
legend("topright", c("Effet principal", "Interactions"), fill = bar.col, cex=0.6)
abline(h=0.2, col = "gray", lty = 2)
}
par(mfrow=c(1,3), cex.lab = 0.2,cex.main = 0.9)
plot.fast99(indice_sensibilite_1000[[1]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
plot.fast99(indice_sensibilite_1000[[2]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 4)")
plot.fast99(indice_sensibilite_1000[[3]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 5)")
# On fait une visualisation graphiquem
plot.fast99 <- function(x, ylim = c(0, 1), main = NULL, names.arg = NULL, ...) {
S <- rbind(x$D1 / x$V, 1 - x$Dt / x$V - x$D1 / x$V)
colnames(S) <- colnames(x$X)
bar.col <- c("darkblue","darkred")
barplot(S, ylim = ylim, col = bar.col, main = main, names.arg = names.arg,cex.names=.43)
legend("topright", c("Effet principal", "Interactions"), fill = bar.col, cex=0.6)
abline(h=0.2, col = "gray", lty = 2)
}
par(mfrow=c(1,3), cex.lab = 0.8,cex.main = 0.2)
plot.fast99(indice_sensibilite_1000[[1]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
plot.fast99(indice_sensibilite_1000[[2]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 4)")
plot.fast99(indice_sensibilite_1000[[3]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 5)")
# On fait une visualisation graphiquem
plot.fast99 <- function(x, ylim = c(0, 1), main = NULL, names.arg = NULL, ...) {
S <- rbind(x$D1 / x$V, 1 - x$Dt / x$V - x$D1 / x$V)
colnames(S) <- colnames(x$X)
bar.col <- c("darkblue","darkred")
barplot(S, ylim = ylim, col = bar.col, main = main, names.arg = names.arg,cex.names=.43)
legend("topright", c("Effet principal", "Interactions"), fill = bar.col, cex=0.6)
abline(h=0.2, col = "gray", lty = 2)
}
par(mfrow=c(1,3), cex.main=0.7, mar=c(2, 3, 2, 2), cex.axis=0.6)
plot.fast99(indice_sensibilite_1000[[1]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
plot.fast99(indice_sensibilite_1000[[2]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 4)")
plot.fast99(indice_sensibilite_1000[[3]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 5)")
# On fait une visualisation graphiquem
plot.fast99 <- function(x, ylim = c(0, 1), main = NULL, names.arg = NULL, ...) {
S <- rbind(x$D1 / x$V, 1 - x$Dt / x$V - x$D1 / x$V)
colnames(S) <- colnames(x$X)
bar.col <- c("darkblue","darkred")
barplot(S, ylim = ylim, col = bar.col, main = main, names.arg = names.arg,cex.names=.43)
legend("topright", c("Effet principal", "Interactions"), fill = bar.col, cex=0.6)
abline(h=0.2, col = "gray", lty = 2)
}
par(mfrow=c(1,3))
plot.fast99(indice_sensibilite_1000[[1]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
plot.fast99(indice_sensibilite_1000[[2]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 4)")
plot.fast99(indice_sensibilite_1000[[3]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 5)")
par(mfrow=c(2,3), cex.lab = 0.8,cex.main = 0.9)
title = paste("Distribution pour la sortie",
c("1 \n (nombre d'infectés le dernier jour)",
"2 \n (nombre d'infections le dernier jour)",
"3 \n (nombre d'infectés sur les 2 années)",
"4 \n (nombre d'infection la première année)",
"5 \n (incidence moyenne)",
"6 \n (prévalence par année)"
))
for (i in 1:6){
hist(result_fast1000[,i],main=title[i],xlab="Valeurs",ylab="Fréquence",breaks=100,col="black")
}
# On fait une visualisation graphiquem
plot.fast99 <- function(x, ylim = c(0, 1), main = NULL, names.arg = NULL, ...) {
S <- rbind(x$D1 / x$V, 1 - x$Dt / x$V - x$D1 / x$V)
colnames(S) <- colnames(x$X)
bar.col <- c("darkblue","darkred")
barplot(S, ylim = ylim, col = bar.col, main = main, names.arg = names.arg,cex.names=.43)
legend("topright", c("Effet principal", "Interactions"), fill = bar.col, cex=0.6)
abline(h=0.2, col = "gray", lty = 2)
}
par(mfrow=c(2,2), cex.main=0.7, mar=c(2, 3, 2, 2), cex.axis=0.6)
plot.fast99(indice_sensibilite_1000[[1]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
plot.fast99(indice_sensibilite_1000[[2]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 4)")
plot.fast99(indice_sensibilite_1000[[3]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 5)")
parameters <- data.frame(
Méthode = c("Sortie 1","Sortie 2","Sortie 3", "Sortie 4", "Sortie 5", "Sortie 6"),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee", "", ""),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat", "", ""),
FAST = c("rec, loss", "NA", "rec, trans, K, lat", "NA", "NA", "NA"),
OAT = c("loss, rec, trans", "loss, rec, trans", "loss, rec", "loss, rec", "loss, rec", "loss, rec"),
Morris = c("rec, trans", "rec, trans, loss, K, lat", "rec, trans, loss, K, lat, dr, portee, m3", "rec, trans, loss, K, lat, dr, portee, m3", "", ""),
FAST = c("NA", "NA", "rec, K", "K, loss", "rec, loss", "NA"),
)
parameters <- data.frame(
Méthode = c("Sortie 1","Sortie 2","Sortie 3", "Sortie 4", "Sortie 5", "Sortie 6"),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee", "", ""),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat", "", ""),
FAST = c("rec, loss", "NA", "rec, trans, K, lat", "NA", "NA", "NA"),
OAT = c("loss, rec, trans", "loss, rec, trans", "loss, rec", "loss, rec", "loss, rec", "loss, rec"),
Morris = c("rec, trans", "rec, trans, loss, K, lat", "rec, trans, loss, K, lat, dr, portee, m3", "rec, trans, loss, K, lat, dr, portee, m3", "", ""),
FAST = c("NA", "NA", "rec, K", "K, loss", "rec, loss", "NA"),
)
parameters <- data.frame(
Méthode = c("Sortie 1","Sortie 2","Sortie 3", "Sortie 4", "Sortie 5", "Sortie 6"),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee", "", ""),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat", "", ""),
FAST = c("rec, loss", "NA", "rec, trans, K, lat", "NA", "NA", "NA"),
OAT = c("loss, rec, trans", "loss, rec, trans", "loss, rec", "loss, rec", "loss, rec", "loss, rec"),
Morris = c("rec, trans", "rec, trans, loss, K, lat", "rec, trans, loss, K, lat, dr, portee, m3", "rec, trans, loss, K, lat, dr, portee, m3", "", ""),
FAST = c("NA", "NA", "rec, K", "K, loss", "rec, loss", "NA")
)
colnames(parameters) = c("Méthode", "OAT", "Morris", "FAST", "OAT", "Morris", "Fast")
parameter_table <- kable(parameters, "html") %>%
kable_styling(full_width = FALSE) %>%
column_spec(1, bold = TRUE)  %>%
add_header_above(c(" " = 1, "Sans saisonnalité" = 3, "Avec saisonnalité" = 3))
parameter_table
parameters <- data.frame(
Méthode = c("Sortie 1","Sortie 2","Sortie 3", "Sortie 4", "Sortie 5", "Sortie 6"),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee", "NA", "NA"),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat", "NA", "NA"),
FAST = c("rec, loss", "NA", "rec, trans, K, lat", "NA", "NA", "NA"),
OAT = c("loss, rec, trans", "loss, rec, trans", "loss, rec", "loss, rec", "loss, rec", "loss, rec"),
Morris = c("rec, trans", "rec, trans, loss, K, lat", "rec, trans, loss, K, lat, dr, portee, m3", "rec, trans, loss, K, lat, dr, portee, m3", "", ""),
FAST = c("NA", "NA", "rec, K", "K, loss", "rec, loss", "NA")
)
colnames(parameters) = c("Méthode", "OAT", "Morris", "FAST", "OAT", "Morris", "Fast")
parameter_table <- kable(parameters, "html") %>%
kable_styling(full_width = FALSE) %>%
column_spec(1, bold = TRUE)  %>%
add_header_above(c(" " = 1, "Sans saisonnalité" = 3, "Avec saisonnalité" = 3))
parameter_table
parameters <- data.frame(
Méthode = c("Sortie 1","Sortie 2","Sortie 3", "Sortie 4", "Sortie 5", "Sortie 6"),
OAT = c("rec, loss, trans, lat", "K, loss, trans, portee,
sr, f3", "rec, trans, lat, K", "K, loss, trans, f3, sr, portee", "NA", "NA"),
Morris = c("rec?, loss?", "K, loss", "rec, trans, K,
lat, f3, portee, sr", "K, loss, trans, portee,
sr, f3, rec, m3, lat", "NA", "NA"),
FAST = c("rec, loss", "NA", "rec, trans, K, lat", "NA", "NA", "NA"),
OAT = c("loss, rec, trans", "loss, rec, trans", "loss, rec", "loss, rec", "loss, rec", "loss, rec"),
Morris = c("rec, trans", "rec, trans, loss, K, lat", "rec, trans, loss, K, lat, sr, portee, m3", "rec, trans, loss, K, lat, sr, portee, m3", "", ""),
FAST = c("NA", "NA", "rec, K", "K, loss", "rec, loss", "NA")
)
colnames(parameters) = c("Méthode", "OAT", "Morris", "FAST", "OAT", "Morris", "Fast")
parameter_table <- kable(parameters, "html") %>%
kable_styling(full_width = FALSE) %>%
column_spec(1, bold = TRUE)  %>%
add_header_above(c(" " = 1, "Sans saisonnalité" = 3, "Avec saisonnalité" = 3))
parameter_table
# On fait une visualisation graphiquem
plot.fast99 <- function(x, ylim = c(0, 1), main = NULL, names.arg = NULL, ...) {
S <- rbind(x$D1 / x$V, 1 - x$Dt / x$V - x$D1 / x$V)
colnames(S) <- colnames(x$X)
bar.col <- c("darkblue","darkred")
barplot(S, ylim = ylim, col = bar.col, main = main, names.arg = names.arg,cex.names=.43)
legend("topright", c("Effet principal", "Interactions"), fill = bar.col, cex=0.6)
abline(h=0.2, col = "gray", lty = 2)
}
par(mfrow=c(2,2), cex.main=0.7, mar=c(2, 3, 2, 2), cex.axis=0.6)
plot.fast99(indice_sensibilite_1000[[1]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
plot.fast99(indice_sensibilite_1000[[2]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 4)")
plot.fast99(indice_sensibilite_1000[[3]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 5)")
plot.fast99(indice_sensibilite_1000[[4]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 6)")
# on garde uniquement les sortie interprétables
sortie_interpetable = c(3, 4, 5, 6)
# on calcule des indices de sensibilité avec tell()
indice_sensibilite_1000 <- lapply(sortie_interpetable, function(i) tell(Fast1000, result_fast1000[, i]))
# On fait une visualisation graphiquem
plot.fast99 <- function(x, ylim = c(0, 1), main = NULL, names.arg = NULL, ...) {
S <- rbind(x$D1 / x$V, 1 - x$Dt / x$V - x$D1 / x$V)
colnames(S) <- colnames(x$X)
bar.col <- c("darkblue","darkred")
barplot(S, ylim = ylim, col = bar.col, main = main, names.arg = names.arg,cex.names=.43)
legend("topright", c("Effet principal", "Interactions"), fill = bar.col, cex=0.6)
abline(h=0.2, col = "gray", lty = 2)
}
par(mfrow=c(2,2), cex.main=0.7, mar=c(2, 3, 2, 2), cex.axis=0.6)
plot.fast99(indice_sensibilite_1000[[1]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 3)")
plot.fast99(indice_sensibilite_1000[[2]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 4)")
plot.fast99(indice_sensibilite_1000[[3]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 5)")
plot.fast99(indice_sensibilite_1000[[4]], main="Analyse FAST avec 1000 scénarios par paramètre \n (résulat pour la sortie 6)")
