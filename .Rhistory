plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2)
plot_S1 <- plotMorris(mu.star_SX=dfMorris$mu.star_S1,sigma_SX=dfMorris$sigma_S1)
plot_S2 <- plotMorris(mu.star_SX=dfMorris$mu.star_S2,sigma_SX=dfMorris$sigma_S2)
plot_S3 <- plotMorris(mu.star_SX=dfMorris$mu.star_S3,sigma_SX=dfMorris$sigma_S3)
plot_S4 <- plotMorris(mu.star_SX=dfMorris$mu.star_S4,sigma_SX=dfMorris$sigma_S4)
plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2)
plotMorris <- function(mu.star_SX,sigma_SX,title="Analyse de Morris"){
Parametres <- c(rep("démographiques",10),rep("épidémiques",5))
plot <- ggplot(data=NULL,aes(x=mu.star_SX,y=sigma_SX,col=Parametres)) +
geom_text(aes(label=par_name, size=7)) +
scale_color_manual(values = c("darkblue","darkred")) +
xlab(label="mu*") +
ylab(label="sigma") +
labs(title = title) +
theme_minimal()+
theme(text = element_text(size = 5))
return(plot)
}
dfMorris <- get_dfMorris(Morris)
plot_S1 <- plotMorris(mu.star_SX=dfMorris$mu.star_S1,sigma_SX=dfMorris$sigma_S1)
plot_S1 <- plotMorris(mu.star_SX=dfMorris$mu.star_S1,sigma_SX=dfMorris$sigma_S1)
plot_S2 <- plotMorris(mu.star_SX=dfMorris$mu.star_S2,sigma_SX=dfMorris$sigma_S2)
plot_S3 <- plotMorris(mu.star_SX=dfMorris$mu.star_S3,sigma_SX=dfMorris$sigma_S3)
plot_S4 <- plotMorris(mu.star_SX=dfMorris$mu.star_S4,sigma_SX=dfMorris$sigma_S4)
plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2)
plotMorris <- function(mu.star_SX,sigma_SX,title="Analyse de Morris"){
Parametres <- c(rep("démographiques",10),rep("épidémiques",5))
plot <- ggplot(data=NULL,aes(x=mu.star_SX,y=sigma_SX,col=Parametres)) +
geom_text(aes(label=par_name),size=7) +
scale_color_manual(values = c("darkblue","darkred")) +
xlab(label="mu*") +
ylab(label="sigma") +
labs(title = title) +
theme_minimal()+
theme(text = element_text(size = 5))
return(plot)
}
plot_S1 <- plotMorris(mu.star_SX=dfMorris$mu.star_S1,sigma_SX=dfMorris$sigma_S1)
plot_S2 <- plotMorris(mu.star_SX=dfMorris$mu.star_S2,sigma_SX=dfMorris$sigma_S2)
plot_S3 <- plotMorris(mu.star_SX=dfMorris$mu.star_S3,sigma_SX=dfMorris$sigma_S3)
plot_S4 <- plotMorris(mu.star_SX=dfMorris$mu.star_S4,sigma_SX=dfMorris$sigma_S4)
plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2)
plotMorris <- function(mu.star_SX,sigma_SX,title="Analyse de Morris"){
Parametres <- c(rep("démographiques",10),rep("épidémiques",5))
plot <- ggplot(data=NULL,aes(x=mu.star_SX,y=sigma_SX,col=Parametres)) +
geom_text(aes(label=par_name),size=1) +
scale_color_manual(values = c("darkblue","darkred")) +
xlab(label="mu*") +
ylab(label="sigma") +
labs(title = title) +
theme_minimal()+
theme(text = element_text(size = 5))
return(plot)
}
plot_S1 <- plotMorris(mu.star_SX=dfMorris$mu.star_S1,sigma_SX=dfMorris$sigma_S1)
plot_S2 <- plotMorris(mu.star_SX=dfMorris$mu.star_S2,sigma_SX=dfMorris$sigma_S2)
plot_S3 <- plotMorris(mu.star_SX=dfMorris$mu.star_S3,sigma_SX=dfMorris$sigma_S3)
plot_S4 <- plotMorris(mu.star_SX=dfMorris$mu.star_S4,sigma_SX=dfMorris$sigma_S4)
plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2)
plotMorris <- function(mu.star_SX,sigma_SX,title="Analyse de Morris"){
Parametres <- c(rep("démographiques",10),rep("épidémiques",5))
plot <- ggplot(data=NULL,aes(x=mu.star_SX,y=sigma_SX,col=Parametres)) +
geom_text(aes(label=par_name),size=2) +
scale_color_manual(values = c("darkblue","darkred")) +
xlab(label="mu*") +
ylab(label="sigma") +
labs(title = title) +
theme_minimal()+
theme(text = element_text(size = 6))
return(plot)
}
plot_S1 <- plotMorris(mu.star_SX=dfMorris$mu.star_S1,sigma_SX=dfMorris$sigma_S1)
plot_S2 <- plotMorris(mu.star_SX=dfMorris$mu.star_S2,sigma_SX=dfMorris$sigma_S2)
plot_S3 <- plotMorris(mu.star_SX=dfMorris$mu.star_S3,sigma_SX=dfMorris$sigma_S3)
plot_S4 <- plotMorris(mu.star_SX=dfMorris$mu.star_S4,sigma_SX=dfMorris$sigma_S4)
plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2)
plot_S1 <- plotMorris(mu.star_SX=dfMorris$mu.star_S1,sigma_SX=dfMorris$sigma_S1,
title="Sortie : Nombre d'infectés le dernier jour")
plot_S2 <- plotMorris(mu.star_SX=dfMorris$mu.star_S2,sigma_SX=dfMorris$sigma_S2,
title="Sortie : Nombre d'infection le dernier jour")
plot_S3 <- plotMorris(mu.star_SX=dfMorris$mu.star_S3,sigma_SX=dfMorris$sigma_S3,
title="Sortie : Nombre d'infectés sur les 2 annnées")
plot_S4 <- plotMorris(mu.star_SX=dfMorris$mu.star_S4,sigma_SX=dfMorris$sigma_S4,
title = "Sortie : Nombre d'infection la première année")
plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2)
?plot_grid
plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2, labels="Analyse de Morris")
plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2, labels="Analyse de Morris",hjust=0,vjust=0)
plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2, labels="Analyse de Morris",hjust=1,vjust=0.5)
grid <- plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2)
ggdraw() +
draw_text("Title Text", x = 0.5, y = 0.95, size = 16) +  # Adjust the size as needed
draw_plot(grid)
plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2, labels = titnew, label_y = 1, rel_heights = c(.65,.35))
plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2, labels = "titnew", label_y = 1, rel_heights = c(.65,.35))
plot_grid(
ggdraw() + draw_text("Title Text", x = 0.5, y = 1, vjust = 2, hjust = 0.5, size = 16),
grid,
ncol = 1,
rel_heights = c(0.1, 1)
)
get_dfMorris <- function(Morris){
# Cette fonction sert à récupérer mu, mu* et sigma pour chaque sortie du modèle sous
# la forme d'un data frame
dfMorris = getMorrisResult(Morris$ee,mean,"mu") %>%
cbind(getMorrisResult(abs(Morris$ee),mean,"mu.star")) %>% # mu.star mesure la sensibilité
cbind(getMorrisResult(Morris$ee,sd,"sigma")) # sigma mesure interactions et relations non linéaires
return(dfMorris)
}
getMorrisResult <- function(Morris_ee, functionToApply,parameter){
# Sous fonction de get_dfMorris pour calculer mu, mu* ou sigma
# en appliquant la methode donnée dans l'aide de la fonction morris
df = apply(Morris_ee, 3, function(M){apply(M, 2, functionToApply)}) %>%
as.data.frame() %>%
renameColMorris(parameter)
}
renameColMorris <- function(df,parameter){
# Sous fonction de getMorrisResult, sert à avoir des noms
# de colonnes qui font sens
colnames(df) <- paste0(parameter, "_S", 1:4)
return(df)
}
plotMorris <- function(mu.star_SX,sigma_SX,title="Analyse de Morris",parametersList=par_name){
Parametres <- c(rep("démographiques",10),rep("épidémiques",5))
plot <- ggplot(data=NULL,aes(x=mu.star_SX,y=sigma_SX,col=Parametres)) +
geom_text(aes(label=parametersList),size=2) +
scale_color_manual(values = c("darkblue","darkred")) +
xlab(label="mu*") +
ylab(label="sigma") +
labs(title = title) +
theme_minimal()+
theme(text = element_text(size = 6))
return(plot)
}
dfMorris <- get_dfMorris(Morris)
plot_S1 <- plotMorris(mu.star_SX=dfMorris$mu.star_S1,sigma_SX=dfMorris$sigma_S1,
title="Sortie : Nombre d'infectés le dernier jour")
plot_S2 <- plotMorris(mu.star_SX=dfMorris$mu.star_S2,sigma_SX=dfMorris$sigma_S2,
title="Sortie : Nombre d'infection le dernier jour")
plot_S3 <- plotMorris(mu.star_SX=dfMorris$mu.star_S3,sigma_SX=dfMorris$sigma_S3,
title="Sortie : Nombre d'infectés sur les 2 annnées")
plot_S4 <- plotMorris(mu.star_SX=dfMorris$mu.star_S4,sigma_SX=dfMorris$sigma_S4,
title = "Sortie : Nombre d'infection la première année")
grid <- plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2)
plot_grid(
ggdraw() + draw_text("Analyse de Morris", x = 0.5, y = 1, vjust = 2, hjust = 0.5, size = 16),
grid,
ncol = 1,
rel_heights = c(0.1, 1)
)
dfMorris
Morris
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(sensitivity)
library(dplyr)
library(cowplot)
source(file = "functionModProjet2023.r")
ValNominale = c(100, 0.5, 0.0014, 0.00029, 0.0019,
0.0019, 0.0082, 5, 1/365, 1/365,
0.3, 1/5, 1/20, 1/100, 0.001)
scenario_initial = matrix(ValNominale, nrow=1, ncol=15)
res = modAppli1(scenario_initial)
effectif_data = tibble(
temps = 1:(2*365),
S = res[[2]][4,1,],
L = res[[2]][4,2,],
I = res[[2]][4,3,],
R = res[[2]][4,4,],
N = S + L + I + R,
C1 = res[[2]][1,1,] + res[[2]][1,2,] + res[[2]][1,3,] + res[[2]][1,4,],
C2 = res[[2]][2,1,] + res[[2]][2,2,] + res[[2]][2,3,] + res[[2]][2,4,],
C3 = res[[2]][3,1,] + res[[2]][3,2,] + res[[2]][3,3,] + res[[2]][3,4,]
)
p1 = ggplot() +
geom_line(data = effectif_data, aes(x = temps, y = S, color = "1- Susceptible"), linewidth = 1) +
geom_line(data = effectif_data, aes(x = temps, y = L, color = "2- Latent"), linewidth = 1) +
geom_line(data = effectif_data, aes(x = temps, y = I, color = "3- Infectious"), linewidth = 1) +
geom_line(data = effectif_data, aes(x = temps, y = R, color = "4- Recovered"), linewidth = 1) +
geom_line(data = effectif_data, aes(x = temps, y = N, color = "Population Size"), linewidth = 1) +
labs(x = "Time", y = "Effectif") +
theme_minimal() +
ggtitle("Evolution of Epidemic stages - Initial Model")
effectif_data2 <- tibble(effectif =
c(effectif_data$C1,
effectif_data$C2,
effectif_data$C3),
temps = rep(effectif_data$temps, times = 3))  %>%
mutate(age_class = rep(c("First Age Class", "Second Age Class", "Third Age Class"), each = nrow(effectif_data) )) %>%
group_by(temps, age_class) %>%
summarise(n = sum(effectif)) %>%
mutate(percentage = n / sum(n))
p2 = ggplot(effectif_data2, aes(x=temps, y=percentage, fill=age_class)) +
geom_area(alpha=0.4 , size=1, colour="black")+
labs(fill = "Age class") +
labs(x = "Time", y = "Effectif") +
theme_minimal() +
ggtitle("Evolution of age structure - Initial Model")
p1
p2
par_name = c("K", "sr", "m1", "m2", "m3", "f2", "f3", "portee", "t1", "t2", "trans", "lat", "rec", "loss", "madd")
ValNominale = c(100,
0.5, 0.0014, 0.00029, 0.0019,
0.0019, 0.0082, 5, 1/365, 1/365,
0.3, 1/5, 1/20, 1/100, 0.001)
makeAnalyseOAT <- function(ValNominale){
sortie = createMatriceForOAT(ValNominale) %>%
modAppli() %>%
normaliseSortie(ValNominale)
return(sortie)
}
createMatriceForOAT <- function(ValNominale){
nbParametres = length(ValNominale)
nbScenariosParParam = 11
nbScenariosTotal = nbScenariosParParam*nbParametres
valeurMin = ValNominale * 0.75
valeurMax = ValNominale * 1.25
matrixScenario =  matrix(rep(ValNominale, each = nbScenariosTotal), nrow = nbScenariosTotal, ncol = nbParametres)
for (i in 1:nbParametres){
i_min = nbScenariosParParam*(i-1)+1
i_max = nbScenariosParParam*i
matrixScenario[i_min:i_max,i] = pracma::linspace(valeurMin[i],valeurMax[i], n = nbScenariosParParam)
}
return(matrixScenario)
}
normaliseSortie <- function(sortie,ValNominale){
sortieNominale = modAppli(matrix(ValNominale, nrow=1, ncol=15))
return(data.frame(prop_inf = sortie[,1]/sortieNominale[,1],
infec_end = sortie[,2]/sortieNominale[,2],
nb_max_infec = sortie[,3]/sortieNominale[,3],
nb_infec_year1 = sortie[,4]/sortieNominale[,4]))
}
plotOATAnalysis <- function(i,sortieNormalise,matrixScenario){
nbScenariosParParam = 11
i_min = nbScenariosParParam*(i-1)+1
i_max = nbScenariosParParam*i
resultParam_i = data.frame(parametre=matrixScenario[i_min:i_max,i],
prop_inf=sortieNormalise[i_min:i_max,1],
nb_infected_end=sortieNormalise[i_min:i_max,2],
nb_max_infec=sortieNormalise[i_min:i_max,3],
nb_infec_year1=sortieNormalise[i_min:i_max,4])
p1 = ggplot() +
geom_line(data = resultParam_i, aes(x = parametre, y = prop_inf, color = "S1"), size = 1) +
geom_line(data = resultParam_i, aes(x = parametre, y = nb_infected_end, color = "S2"), size = 1) +
geom_line(data = resultParam_i, aes(x = parametre, y = nb_max_infec,  color = "S3"), size = 1) +
geom_line(data = resultParam_i, aes(x = parametre, y = nb_infec_year1,  color = "S4"), size = 1) +
scale_x_continuous(trans='log10') +
labs(x = "Parameter value", y = "Relative variation") +
theme_minimal() +
ggtitle(par_name[i])
return(p1)
}
matriceOAT = createMatriceForOAT(ValNominale)
sortieNormalise = makeAnalyseOAT(ValNominale)
head(sortieNormalise)
plotOATAnalysis(i=1,sortieNormalise,matriceOAT)
plots <- list()
nbOfPlots <- 15
for (i in 1:nbOfPlots) {
plots[[i]] <- plotOATAnalysis(i, sortieNormalise, matriceOAT)
}
plot_grid(plotlist = plots, ncol = 3)
par_name = c("K", "sr", "m1", "m2", "m3", "f2", "f3", "portee", "t1", "t2", "trans", "lat", "rec", "loss", "madd")
lowerValues = ValNominale*.75
upperValues = ValNominale*1.25
# On utilise la fonction Morris du package sensitivity
Morris <- morris(model = modAppli,
factors = par_name,
r = 50,
scale=TRUE,
design = list(type = "oat", levels = 6, grid.jump = 3),
binf=lowerValues,
bsup=upperValues)
get_dfMorris <- function(Morris){
# Cette fonction sert à récupérer mu, mu* et sigma pour chaque sortie du modèle sous
# la forme d'un data frame
dfMorris = getMorrisResult(Morris$ee,mean,"mu") %>%
cbind(getMorrisResult(abs(Morris$ee),mean,"mu.star")) %>% # mu.star mesure la sensibilité
cbind(getMorrisResult(Morris$ee,sd,"sigma")) # sigma mesure interactions et relations non linéaires
return(dfMorris)
}
getMorrisResult <- function(Morris_ee, functionToApply,parameter){
# Sous fonction de get_dfMorris pour calculer mu, mu* ou sigma
# en appliquant la methode donnée dans l'aide de la fonction morris
df = apply(Morris_ee, 3, function(M){apply(M, 2, functionToApply)}) %>%
as.data.frame() %>%
renameColMorris(parameter)
}
renameColMorris <- function(df,parameter){
# Sous fonction de getMorrisResult, sert à avoir des noms
# de colonnes qui font sens
colnames(df) <- paste0(parameter, "_S", 1:4)
return(df)
}
plotMorris <- function(mu.star_SX,sigma_SX,title="Analyse de Morris",parametersList=par_name){
Parametres <- c(rep("démographiques",10),rep("épidémiques",5))
plot <- ggplot(data=NULL,aes(x=mu.star_SX,y=sigma_SX,col=Parametres)) +
geom_text(aes(label=parametersList),size=2) +
scale_color_manual(values = c("darkblue","darkred")) +
xlab(label="mu*") +
ylab(label="sigma") +
labs(title = title) +
theme_minimal()+
theme(text = element_text(size = 6))
return(plot)
}
dfMorris <- get_dfMorris(Morris)
plot_S1 <- plotMorris(mu.star_SX=dfMorris$mu.star_S1,sigma_SX=dfMorris$sigma_S1,
title="Sortie : Nombre d'infectés le dernier jour")
plot_S2 <- plotMorris(mu.star_SX=dfMorris$mu.star_S2,sigma_SX=dfMorris$sigma_S2,
title="Sortie : Nombre d'infection le dernier jour")
plot_S3 <- plotMorris(mu.star_SX=dfMorris$mu.star_S3,sigma_SX=dfMorris$sigma_S3,
title="Sortie : Nombre d'infectés sur les 2 annnées")
plot_S4 <- plotMorris(mu.star_SX=dfMorris$mu.star_S4,sigma_SX=dfMorris$sigma_S4,
title = "Sortie : Nombre d'infection la première année")
grid <- plot_grid(plotlist = list(plot_S1,plot_S2,plot_S3,plot_S4),ncol=2)
plot_grid(
ggdraw() + draw_text("Analyse de Morris", x = 0.5, y = 1, vjust = 2, hjust = 0.5, size = 16),
grid,
ncol = 1,
rel_heights = c(0.1, 1)
)
par_name = c("K", "sr", "m1", "m2", "m3", "f2", "f3", "portee", "t1", "t2", "trans", "lat", "rec", "loss", "madd")
scenarios_par_param = 100
q.arg4 <- Map(list, ValNominale * 0.75, ValNominale * 1.25)
names(q.arg4) <- par_name
Fast <- fast99(model = NULL,
factors = par_name,
n = scenarios_par_param,
q = rep("qunif", 15),
q.arg =q.arg4)
sample100 = Fast$X
head(sample100)
par(mfrow=c(2,2), mar = c(3, 3, 1, 1), cex.lab = 0.7, mgp = c(1.5, 0.5, 0))
for (i in 1:4){
valueMin = q.arg4[[i]][[1]]
valueMax = q.arg4[[i]][[2]]
param = par_name[i]
plot(sample100[,i],pch=20, cex=.7,ylab=paste(param,"value"),main=paste("Variation de",param))
abline(h=valueMin,col="red",lty=2)
abline(h=valueMax,col="red",lty=2)
hist(sample100[,i],breaks = 100, main=paste("Répartition des valeurs pour",param))
}
scenarios_par_param = 1000
Fast <- fast99(model = NULL,
factors = par_name,
n = scenarios_par_param,
q = rep("qunif", 15),
q.arg =q.arg4)
sample1000 = Fast$X
par(mfrow=c(2,2), mar = c(3, 3, 1, 1), cex.lab = 0.7, mgp = c(1.5, 0.5, 0))
for (i in 1:4){
valueMin = q.arg4[[i]][[1]]
valueMax = q.arg4[[i]][[2]]
plot(sample1000[,i],pch=20, cex=.7,ylab=paste(par_name[i],"value"),main=paste("Variation de",par_name[i]))
abline(h=valueMin,col="red",lty=2)
abline(h=valueMax,col="red",lty=2)
hist(sample100[,i],breaks = 100, main=paste("Répartition des valeurs pour",param))
}
result100 = modAppli(sample100)
result1000 = modAppli(sample1000)
result100
class(result100)
result100[1]
result100[[1]]
result100[,1]
result100
hist(result100[,1])
par(mfrow=c(2,2))
for (i in 1:4){
hist(result100[,i])
}
title = paste("Distribution des valeurs pour la sortie",
c("1 (nombre d'infectés le dernier jour)",
"2 (nombre d'infections le dernier jour)",
"3 (nombre d'infectés sur les 2 années)",
"4 (nombre d'infection la première année)"
))
title
par(mfrow=c(2,2))
title = paste("Distribution des valeurs pour la sortie",
c("1 (nombre d'infectés le dernier jour)",
"2 (nombre d'infections le dernier jour)",
"3 (nombre d'infectés sur les 2 années)",
"4 (nombre d'infection la première année)"
))
for (i in 1:4){
hist(result100[,i],main=title[i])
}
par(mfrow=c(2,2))
title = paste("Distribution pour la sortie",
c("1 (nombre d'infectés le dernier jour)",
"2 (nombre d'infections le dernier jour)",
"3 (nombre d'infectés sur les 2 années)",
"4 (nombre d'infection la première année)"
))
for (i in 1:4){
hist(result100[,i],main=title[i])
}
par(mfrow=c(2,2))
title = paste("Distribution pour la sortie",
c("1 \n (nombre d'infectés le dernier jour)",
"2 \n (nombre d'infections le dernier jour)",
"3 \n (nombre d'infectés sur les 2 années)",
"4 \n (nombre d'infection la première année)"
))
for (i in 1:4){
hist(result100[,i],main=title[i])
}
par(mfrow=c(2,2))
title = paste("Distribution pour la sortie",
c("1 \n (nombre d'infectés le dernier jour)",
"2 \n (nombre d'infections le dernier jour)",
"3 \n (nombre d'infectés sur les 2 années)",
"4 \n (nombre d'infection la première année)"
))
for (i in 1:4){
hist(result100[,i],main=title[i],cex=1)
}
hist(result100[,i],main=title[i],cex=.1)
par(mfrow=c(2,2))
title = paste("Distribution pour la sortie",
c("1 \n (nombre d'infectés le dernier jour)",
"2 \n (nombre d'infections le dernier jour)",
"3 \n (nombre d'infectés sur les 2 années)",
"4 \n (nombre d'infection la première année)"
))
for (i in 1:4){
hist(result100[,i],main=title[i],cex=.1)
}
par(mfrow=c(2,2), cex.lab = 0.7)
title = paste("Distribution pour la sortie",
c("1 \n (nombre d'infectés le dernier jour)",
"2 \n (nombre d'infections le dernier jour)",
"3 \n (nombre d'infectés sur les 2 années)",
"4 \n (nombre d'infection la première année)"
))
for (i in 1:4){
hist(result100[,i],main=title[i])
}
par(mfrow=c(2,2), cex.lab = 1)
title = paste("Distribution pour la sortie",
c("1 \n (nombre d'infectés le dernier jour)",
"2 \n (nombre d'infections le dernier jour)",
"3 \n (nombre d'infectés sur les 2 années)",
"4 \n (nombre d'infection la première année)"
))
for (i in 1:4){
hist(result100[,i],main=title[i])
}
par(mfrow=c(2,2), cex.lab = 1)
title = paste("Distribution pour la sortie",
c("1 \n (nombre d'infectés le dernier jour)",
"2 \n (nombre d'infections le dernier jour)",
"3 \n (nombre d'infectés sur les 2 années)",
"4 \n (nombre d'infection la première année)"
))
for (i in 1:4){
hist(result100[,i],main=title[i],xlab="Valeurs",ylab="Fréquence")
}
par(mfrow=c(2,2), cex.lab = 1,cex.main = 0.9)
title = paste("Distribution pour la sortie",
c("1 \n (nombre d'infectés le dernier jour)",
"2 \n (nombre d'infections le dernier jour)",
"3 \n (nombre d'infectés sur les 2 années)",
"4 \n (nombre d'infection la première année)"
))
for (i in 1:4){
hist(result100[,i],main=title[i],xlab="Valeurs",ylab="Fréquence")
}
par(mfrow=c(2,2), cex.lab = 0.8,cex.main = 0.9)
title = paste("Distribution pour la sortie",
c("1 \n (nombre d'infectés le dernier jour)",
"2 \n (nombre d'infections le dernier jour)",
"3 \n (nombre d'infectés sur les 2 années)",
"4 \n (nombre d'infection la première année)"
))
for (i in 1:4){
hist(result100[,i],main=title[i],xlab="Valeurs",ylab="Fréquence")
}
par(mfrow=c(2,2), cex.lab = 0.8,cex.main = 0.9)
title = paste("Distribution pour la sortie",
c("1 \n (nombre d'infectés le dernier jour)",
"2 \n (nombre d'infections le dernier jour)",
"3 \n (nombre d'infectés sur les 2 années)",
"4 \n (nombre d'infection la première année)"
))
for (i in 1:4){
hist(result100[,i],main=title[i],xlab="Valeurs",ylab="Fréquence",breaks=100)
}
par(mfrow=c(2,2), cex.lab = 0.8,cex.main = 0.9)
title = paste("Distribution pour la sortie",
c("1 \n (nombre d'infectés le dernier jour)",
"2 \n (nombre d'infections le dernier jour)",
"3 \n (nombre d'infectés sur les 2 années)",
"4 \n (nombre d'infection la première année)"
))
for (i in 1:4){
hist(result100[,i],main=title[i],xlab="Valeurs",ylab="Fréquence",breaks=50)
}
par(mfrow=c(2,2), cex.lab = 0.8,cex.main = 0.9)
title = paste("Distribution pour la sortie",
c("1 \n (nombre d'infectés le dernier jour)",
"2 \n (nombre d'infections le dernier jour)",
"3 \n (nombre d'infectés sur les 2 années)",
"4 \n (nombre d'infection la première année)"
))
for (i in 1:4){
hist(result100[,i],main=title[i],xlab="Valeurs",ylab="Fréquence",breaks=500)
}
?fast99
